services:
  phpLoginRegistration:
    build:
      context: ./docker/php
      dockerfile: Dockerfile.dev
    image: php-login-registration:latest
    container_name: php-login-registration
    volumes:
      - .:/var/www/html
    environment:
      COMPOSER_ALLOW_SUPERUSER: ${COMPOSER_ALLOW_SUPERUSER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - php_loginRegistration_network

  web:
    image: nginx:stable
    ports:
      - "9000:80"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - phpLoginRegistration
    networks:
      - php_loginRegistration_network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - php_loginRegistration_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
      image: adminer:latest
      restart: always
      ports:
        - "8080:8080"
      depends_on:
        - db
      networks:
        - php_loginRegistration_network
volumes:
  db_data:

networks:
  php_loginRegistration_network:
    driver: bridge